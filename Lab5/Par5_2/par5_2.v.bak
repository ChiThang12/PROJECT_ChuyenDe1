module Par5_2(
	input SW[15:0],
	output [6:0] HEX0,HEX1,HEX2,HEX3,HEX4,HEX5,HEX6,HEX7,
	output LEDR[15:0]
);
	wire [7:0]A = SW[15:8];
	wire [7:0]B = SW[7:0];
	wire [15:0]sum,temp;
	
	wire [3:0]A0,A1,B0,B1;
	wire [4:0]sA;
	wire [4:0]sB;
	
	decimal_digits dd1(.M(A),.A(A0),.B(A1));
	decimal_digits dd2(.M(B),.A(B0),.B(B1));
	
	assign sA = A0+A1;
	assign sB = B0+B1;
	
	assign sA = (sB[4] == 1) ? (sA[5]==1)? sA+5'b00001:sA+4'b0001 : sA;
	assign sB = sB >= 1010? sB + 4'b0110:sB;

	char_7seg disA0(A0,HEX7);
	char_7seg disA1(A1,HEX6);
	char_7seg disB0(B0,HEX5);
	char_7seg disB1(B1,HEX4);
	char_7seg disS0(sA / 10 ,HEX2);
	char_7seg disS1(sA % 10 ,HEX1);
	char_7seg disS2(sB,HEX0);
	
endmodule






module decimal_digits(
	input M[7:0],
	output A[4:0],
	output B[4:0]
);

	assign B = M[7:0] % 4'b1010;
	assign A = M[7:0] / 4'b1010;
endmodule


// Tạo module hiển thị LED 7 đoạn
module char_7seg(
    input [3:0] C,
    output reg [6:0] Display
);
    always @(*) begin
        case (C)
            4'b0000 : Display = 7'b1000000;  // 0
            4'b0001 : Display = 7'b1111001;  // 1
            4'b0010 : Display = 7'b0100100;  // 2
            4'b0011 : Display = 7'b0110000;  // 3
            4'b0100 : Display = 7'b0011001;  // 4
            4'b0101 : Display = 7'b0010010;  // 5
            4'b0110 : Display = 7'b0000010;  // 6
            4'b0111 : Display = 7'b1111000;  // 7
            4'b1000 : Display = 7'b0000000;  // 8
            4'b1001 : Display = 7'b0010000;  // 9
            default : Display = 7'b1111111;  // Không hợp lệ
        endcase
    end

endmodule